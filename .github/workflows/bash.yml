name: test-bash

on:
  push:
    paths:
      - 'bash/**'
      - '.github/workflows/bash.yml'
  pull_request:
    paths:
      - 'bash/**'
      - '.github/workflows/bash.yml'
  workflow_dispatch:

jobs:
  matrix:
    name: prepare-test-matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: checkout
        uses: actions/checkout@v5.0.0
      - name: generate-matrix
        id: set-matrix
        run: |-
          shopt -s globstar # Enable **
          shopt -s nullglob # Ignore empty glob
          make_matrix() {
            echo '{'
            echo '"test": ['
            f='false'
            for file in ./bash/**/*.test.sh; do
              if "$f"; then
                echo -n ','
              else
                f='true'
              fi
              echo "\"${file}\""
            done
            echo '],'
            echo '"include": ['
            f='false'
            for file in ./bash/**/*.test.sh; do
              if "$f"; then
                echo -n ','
              else
                f='true'
              fi
              echo "{ \"test\": \"${file}\", \"name\": \"$(basename ${file})\" }"
            done
            echo ']'
            echo '}'
          }
          matrix="$(make_matrix)"
          echo "$matrix" | jq .
          echo "matrix=$(echo "$matrix" | jq -c .)" >> "${GITHUB_OUTPUT}"
  build:
    needs: matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.matrix.outputs.matrix) }}
    name: run-${{ matrix.name }}
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v5.0.0
        with:
          fetch-depth: 0
      - name: run-test
        run: |-
          sudo tee /usr/bin/rev-cmp <<'EOF'
          #!/usr/bin/env bash

          a="$1" b="$2"

          if [ "$a" -lt "$b" ]; then
            echo -n '1'
          elif [ "$a" -gt "$b" ]; then
            echo -n '-1'
          else
            echo -n '0'
          fi
          EOF
          sudo chmod +x /usr/bin/rev-cmp
          which rev-cmp

          sudo tee /usr/bin/my-map <<'EOF'
          #!/usr/bin/env bash
          case "$1" in
            'a') echo '1' ;;
            'b') echo '2' ;;
            'c') echo '3' ;;
            'd') echo '4' ;;
            'e') echo '5' ;;
            'f') echo '6' ;;
            'g') echo '7' ;;
            'h') echo '8' ;;
            'i') echo '9' ;;
            'j') echo '10' ;;
          esac
          EOF
          sudo chmod +x /usr/bin/my-map
          which my-map
          chmod +x '${{ matrix.test }}'
          . '${{ matrix.test }}'
